# This is a basic workflow to help you get started with Actions

name: Team1-CI

# Controls when the workflow will run
on:
  [push, pull_request, workflow_dispatch]
  # Triggers the workflow on push or pull request events but only for the main branch
  # Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ### COMPILING JAVA FILES #######
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: build files
        run: |
          cd Projects/P3
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java

  pacman-move:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestPacManMove
        run: |
          cd Projects/P3
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestPacManMove


  ghost-move:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestGhostMove
        run: |
          cd Projects/P3
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestGhostMove


  map-getLoc:
    runs-on: ubuntu-latest
    container: openjdk
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a single command using the runners shell
      - name: TestMapGetLoc
        run: |
          cd Projects/P3
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" -Djava.awt.headless=true org.junit.runner.JUnitCore TestMapGetLoc