# This is a basic workflow to help you get started with Actions

name: Team1-CI

# Controls when the workflow will run
on: [push, pull_request, workflow_dispatch]

defaults:
  run:
    working-directory: Projects/P4/

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Runs a set of commands using the runners shell
      - name: Build
        run: |
          javac -cp "src/" src/*.java
   
  # PacMan Test
  TestPacManValidMoves:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run get_valid_moves() test for PacMan class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManValidMoves
          
  TestPacManMove:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run move() test for PacMan class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManMove
          
  TestGhostInRange:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run is_ghost_in_range() test for PacMan class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostInRange
          
  TestConsume:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run consume() test for PacMan class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestConsume
   
  # Ghost Tests
  TestGhostValidMoves:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run get_valid_moves() test for Ghost class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostValidMoves
          
  TestGhostMove:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run move() test for Ghost class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestGhostMove
          
  TestPacManInRange:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run is_pacman_in_range() test for Ghost class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestPacManInRange
          
  TestAttack:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run attack() test for Ghost class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestAttack
          
  # Map Tests
  TestMapMove:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run move() test for Map class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapMove
          
  TestMapGetLoc:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run getLoc() test for Map class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapGetLoc   
          
  TestMapAttack:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run attack() test for Map class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapAttack
      
  TestMapEatCookie:
    runs-on: ubuntu-latest
    container: openjdk
    steps:
      - uses: actions/checkout@v2
      - name: Run eatCookie() test for Map class
        run: |
          javac -cp "tests/junit-4.10.jar:src/:tests/" src/*.java tests/*.java
          java -cp "tests/junit-4.10.jar:src/:tests/" org.junit.runner.JUnitCore TestMapEatCookie
